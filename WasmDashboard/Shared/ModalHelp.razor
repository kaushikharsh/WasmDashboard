@inject IJSRuntime JS

<div class="modal fade" tabindex="-1" role="dialog" @ref="modal">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title roboto-medium text-center">@Title</h5>
                <button type="button" class="close" @onclick="() => ConfirmDelete(false)" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @Description
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-light roboto-condensed-regular" @onclick="() => ConfirmDelete(false)">Cancel</button>
                <button type="button" class="btn btn-danger roboto-condensed-regular" @onclick="() => ConfirmDelete(true)">Delete</button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] public string Title { get; set; }
    [Parameter] public string Description { get; set; }
    [Parameter] public EventCallback<bool> OnConfirm { get; set; }


    private ElementReference modal;

    public async Task ShowAsync()
    {
        await JS.InvokeVoidAsync("showModal", modal);
    }

    public async Task CloseAsync()
    {
        await JS.InvokeVoidAsync("hideModal", modal);
    }

    private async void ConfirmDelete(bool confirmed)
    {
        await OnConfirm.InvokeAsync(confirmed);
        if (confirmed)
        {
            await CloseAsync();
        }
    }
}
