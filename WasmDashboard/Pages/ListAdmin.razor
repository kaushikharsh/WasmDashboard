
@using WasmDashboard.Models
@inject IJSRuntime JS
@inject HttpClient Http

<main class="full-box main-container">
    <!-- Page content -->
    <section class="full-box page-content">
        <nav class="full-box navbar-info">
            <a href="#" class="float-left show-nav-lateral"><i class="fas fa-exchange-alt"></i></a>
            <a href="#"><i class="far fa-question-circle"></i></a>
            <a href="#"><i class="fas fa-user-cog"></i></a>
            <a href="#" class="btn-exit-system"><i class="fas fa-power-off"></i></a>
        </nav>

        <!-- Page header -->
        <div class="full-box page-header">
            <h3 class="text-left">
                <i class="fas fa-users fa-fw"></i> &nbsp; LIST ADMIN
            </h3>
            <p class="text-justify">
                Lorem ipsum dolor sit amet, consectetur adipisicing elit. Suscipit nostrum rerum animi natus beatae ex. Culpa blanditiis tempore amet alias placeat, obcaecati quaerat ullam, sunt est, odio aut veniam ratione.
            </p>
        </div>

        <div class="container-fluid">
            <ul class="full-box list-unstyled page-nav-tabs">
                <li>
                    <NavLink href="admin"><i class="fas fa-user-plus fa-fw"></i> &nbsp; NEW ADMIN</NavLink>
                </li>
                <li>
                    <NavLink href="listadmin" class="active"><i class="fas fa-users fa-fw"></i> &nbsp; LIST ADMIN</NavLink>
                </li>
            </ul>
        </div>

        <!-- Content -->
        <div class="container-fluid">
            <div class="table-responsive">
                <table class="table table-dark table-sm">
                    <thead>
                        <tr class="text-center roboto-medium">
                            <th>#</th>
                            <th>NAME</th>
                            <th>USER NAME</th>
                            <th>UPDATE</th>
                            <th>DELETE</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var admin in AdminList)
                        {
                            <tr class="text-center">
                                <td>@admin.Id</td>
                                <td>@admin.Name</td>
                                <td>@admin.Username</td>
                                <td>
                                    <button type="button" class="btn btn-success" @onclick="() => UpdateAdmin(admin.Id)">
                                        <i class="fas fa-sync-alt"></i>
                                    </button>
                                </td>
                                <td>
                                    <button type="button" class="btn btn-warning" @onclick="() => ShowDeleteConfirmation(admin.Id)">
                                        <i class="far fa-trash-alt"></i>
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <nav aria-label="Page navigation example">
                <ul class="pagination justify-content-center">
                    <li class="page-item disabled">
                        <a class="page-link" href="#" tabindex="-1">Previous</a>
                    </li>
                    <li class="page-item"><a class="page-link" href="#">1</a></li>
                    <li class="page-item"><a class="page-link" href="#">2</a></li>
                    <li class="page-item"><a class="page-link" href="#">3</a></li>
                    <li class="page-item">
                        <a class="page-link" href="#">Next</a>
                    </li>
                </ul>
            </nav>
        </div>

        <!-- Loader HTML added here -->
        <div id="overlay" style="display:none; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0,0,0,0.5); z-index: 9998;"></div>
        <div id="loader" style="display:none; position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); z-index: 9999;">
            <div class="spinner-border" role="status">
                <span class="sr-only">Loading...</span>
            </div>
        </div>
    </section>

    <!-- Help Modal -->
    <ModalHelp @ref="deleteModal"
               Title="Delete Admin"
               Description="Are you sure you want to delete this admin?"
               OnConfirm="@ConfirmDelete" />

</main>

@code {
    private List<Admin> AdminList { get; set; } = new List<Admin>();
    private int adminIdToDelete;
    private ModalHelp deleteModal;

    protected override async Task OnInitializedAsync()
    {
        // Initialize or fetch the admin list
        try {

            List<Admin> responseAdminList = await Http.GetFromJsonAsync<List<Admin>>("https://jsonplaceholder.typicode.com/users");
            AdminList = responseAdminList;
        }
        catch(Exception ex){
            Console.WriteLine($"Error fetching admins: {ex.Message}");
        }
    }

    private async Task ShowDeleteConfirmation(int id)
    {
        adminIdToDelete = id;
        await deleteModal.ShowAsync();
    }

    private async Task ConfirmDelete(bool confirmed)
    {
        if (confirmed)
        {
            AdminList.RemoveAll(a => a.Id == adminIdToDelete);
            // Called JavaScript function and pass a .NET method to be called when the process is completed
            await JS.InvokeVoidAsync("startProcess", DotNetObjectReference.Create(this));
        }
        // Close the modal after action
        await deleteModal.CloseAsync();
    }

    // This method will be called from JavaScript to notify that the process is completed
    [JSInvokable]
    public async Task NotifyProcessCompleted()
    {
        // Notify user or update UI when JavaScript informs that the process is complete
        Console.WriteLine("Process completed from JavaScript.");
        // Hide the loader
        await JS.InvokeVoidAsync("hideLoader");
        await JS.InvokeVoidAsync("messageAlert");
    }

    private void UpdateAdmin(int id)
    {
        //Might Handle update logic here
    }

}
